services:
  back:
    build: ./back
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      NEO4J_HOST: neo4j
      NEO4J_PORT: 7687
    env_file:
      - ./back/.env
    ports:
      - '3000:3000'
    networks:
      - default
      - db
    depends_on:
      mongo:
        condition: service_healthy
      neo4j:
        condition: service_healthy

  front:
    build:
        context: ./front
        args:
            API_URL: 'http://localhost:3000/api'
            VERIFICATION_EMAIL: 'auto.scheduler.contact@gmail.com'
    ports:
      - '8080:3000'
    networks:
      - default
    depends_on:
      - back


  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    env_file:
      - .env.mongo
    networks:
      - db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet

  neo4j:
    image: neo4j:latest
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - neo4j-data:/data
    env_file:
      - .env.neo4j
    networks:
      - db
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s

volumes:
  mongo-data:
  neo4j-data:

networks:
  db:
